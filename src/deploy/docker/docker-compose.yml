version: "3.7"

services:
  person-service:
    container_name: person-service-${STACK_NAME}
    image: goafabric/person-service-native:1.0.4-SNAPSHOT
#    image: goafabric/person-service${ARCH_SUFFIX}:1.0.4-SNAPSHOT
    restart: 'no'
    ports:
      - 50800:50800
#    healthcheck:
#      test: "curl -f http://localhost:50700/actuator/health || exit 1"
#      interval: 10s
#      timeout: 10s
#      retries: 10
    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    entrypoint: ["/workspace/org.goafabric.personservice.Application", "-Xmx64m"]
#    entrypoint: ["java","-Xms${SERVICE_MEM}","-Xmx${SERVICE_MEM}","-cp","/app/resources:/app/classes:/app/libs/*","org.goafabric.personservice.Application"]
    networks:
      - person-service-net

    environment:
      - TZ=Europe/Berlin
      - management.database.monitoring.enabled=true
      - security.authentication.enabled=false
      # Datasource
      - spring.datasource.url=jdbc:postgresql://postgres_${STACK_NAME}:5432/persondb
      - spring.datasource.username=person-service
      - spring.datasource.password=person-service
      # Adapter
      - adapter.calleeservice.url=http://host.docker.internal:50900
      #Logging
      - logging.level.org.hibernate.SQL="DEBUG"

  postgres:
    container_name: postgres_${STACK_NAME}
    image: postgres:13.2
    restart: 'no'
    ports:
      - 50710:5432
    environment:
      - TZ=Europe/Berlin
      - POSTGRES_USER=person-service
      - POSTGRES_PASSWORD=person-service
      - POSTGRES_DB=persondb
    command: postgres -c 'shared_buffers=128MB' -c 'max_connections=30' -c 'shared_preload_libraries=pg_stat_statements'
    volumes:
      - pgdata:/var/lib/postgresql/data
#      - ../config/postgres/initdb/00_pg_statements.sql:/docker-entrypoint-initdb.d/00_pg_statements.sql
    networks:
      - person-service-net

volumes:
    tmp:
    applogs:
    pgdata:

networks:
  person-service-net:
    driver: bridge
    name: person-service-net